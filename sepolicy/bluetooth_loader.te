#============= bluetooth_loader ==============
get_prop(bluetooth_loader, default_prop)
get_prop(bluetooth_loader, system_prop)

allow bluetooth_loader hci_attach_dev:chr_file rwx_file_perms;
allow bluetooth_loader hci_attach_exec:file rwx_file_perms;
allow bluetooth_loader persist_bluetooth_file:dir r_dir_perms;
allow bluetooth_loader persist_bluetooth_file:file rx_file_perms;
allow bluetooth_loader shell_exec:file { entrypoint rx_file_perms };
allow bluetooth_loader toolbox_exec:file rx_file_perms;

# From LOS 21
allow bluetooth_loader default_prop:file r_file_perms;
allow bluetooth_loader system_prop:file r_file_perms;

# W init    : type=1400 audit(0.0:7): avc: denied { entrypoint } for path="/system/vendor/bin/init.flo.bt.sh" dev="mmcblk0p22" ino=8161 scontext=u:r:bluetooth_loader:s0 tcontext=u:object_r:system_file:s0 tclass=file permissive=0

allow bluetooth_loader system_file:file { entrypoint rx_file_perms };

# Bluetooth executables and scripts
# type bluetooth_loader, domain, domain_deprecated;
# type bluetooth_loader_exec, exec_type, file_type;

# Start bdAddrLoader from init
init_daemon_domain(bluetooth_loader)

# Run init.qcom.bt.sh
allow bluetooth_loader shell_exec:file { entrypoint getattr read };
allow bluetooth_loader bluetooth_loader_exec:file { getattr open execute_no_trans };

# init.qcom.bt.sh needs /system/bin/log access
allow bluetooth_loader devpts:chr_file rw_file_perms;

# Run hci_qcomm_init from init.qcom.bt.sh
domain_auto_trans(bluetooth_loader, hci_attach_exec, hci_attach)
allow hci_attach bluetooth_loader:fd use;

# Set persist.service.bdroid.* and bluetooth.* property values
set_prop(bluetooth_loader, bluetooth_prop)

# Allow getprop/setprop for init.qcom.bt.sh
allow bluetooth_loader system_file:file execute_no_trans;
allow bluetooth_loader toolbox_exec:file rx_file_perms;

# Allow hci_qcomm_init /persist/.bt_nv.bin access
r_dir_file(bluetooth_loader, persist_file);
allow bluetooth_loader bluetooth_data_file:file r_file_perms;

# Access the smd device
allow bluetooth_loader hci_attach_dev:chr_file rw_file_perms;

# And qmuxd
allow bluetooth_loader qmuxd_socket:dir { write add_name remove_name search };
allow bluetooth_loader qmuxd_socket:sock_file { create setattr getattr write unlink };
allow bluetooth_loader qmuxd:unix_stream_socket { connectto };

userdebug_or_eng(`
  diag_use(bluetooth_loader)
')

# type hci_attach, domain;
# type hci_attach_exec, exec_type, file_type;

init_daemon_domain(hci_attach)

set_prop(hci_attach, wifi_prop)

#============= hci_attach ==============
allow hci_attach bluetooth_data_file:dir search;
allow hci_attach bluetooth_data_file:file r_file_perms;
allow hci_attach bluetooth_prop:property_service set;
allow hci_attach hci_attach_dev:chr_file rw_file_perms;
allow hci_attach hci_attach_exec:file execute_no_trans;
allow hci_attach shell_exec:file { entrypoint getattr read };
allow hci_attach system_file:file execute_no_trans;
allow hci_attach toolbox_exec:file rx_file_perms;
